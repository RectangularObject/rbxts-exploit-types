// noinspection JSUnusedGlobalSymbols

/**
 * Returns Synapse's global environment table.
 */
declare function getgenv(): Record<string, unknown>;
/**
 * Returns the game's global environment table.
 */
declare function getrenv(): Record<string, unknown>;
/**
 * Returns a read-only copy of the Lua registry.
 */
declare function getreg(): Readonly<Record<string, unknown>>;
/**
 * Returns a weak table of all Lua objects currently alive according to the garbage collector. By default, tables are not included.
 * @remarks Some values may immediately be collected after this is called; as such, there will be many gaps in the table.
 */
declare function getgc(include_tables?: boolean): Record<string, unknown>;
type tableFilter = { Keys?: unknown[]; Values?: unknown[]; KeyValuePairs?: { [Key: string]: unknown }; Metatable?: unknown };
type functionFilter = { Name?: string; Constants?: unknown[]; Upvalues?: unknown[]; IgnoreSyn?: boolean; Proto?: unknown; Environment?: unknown };
// TODO: improve filtergc implementation, this looks ugly!
/**
 * Searches for values currently referenced by Lua that match the given criteria. Setting return_one indicates that this function should return the first result, or nil if there are no matches.
 * |Key        |Description                                                                             |Default|
 * |:---------:|:--------------------------------------------------------------------------------------:|:-----:|
 * |Name       |If not empty, only include functions with this name.                                    |nil    |
 * |Constants  |If not empty, only include functions with constants that match all values in this table.|nil    |
 * |Upvalues   |If not empty, only include functions with upvalues that match all values in this table. |nil    |
 * |IgnoreSyn  |If false, do not ignore Synapse functions.                                              |true   |
 * |Proto      |If not nil, only include functions with this function prototype.                        |nil    |
 * |Environment|If not nil, only include functions with this environment.                               |nil    |
 * @remarks Values are compared using bit-for-bit equality checks. This means that NaN == NaN and -0 ~= 0. This allows you to specify NaN or -0 as a value you want to search for.
 */
declare function filtergc(type: "function", options: functionFilter, return_one?: false): Callback[];
/**
 * Searches for values currently referenced by Lua that match the given criteria. Setting return_one indicates that this function should return the first result, or nil if there are no matches.
 * |Key        |Description                                                                             |Default|
 * |:---------:|:--------------------------------------------------------------------------------------:|:-----:|
 * |Name       |If not empty, only include functions with this name.                                    |nil    |
 * |Constants  |If not empty, only include functions with constants that match all values in this table.|nil    |
 * |Upvalues   |If not empty, only include functions with upvalues that match all values in this table. |nil    |
 * |IgnoreSyn  |If false, do not ignore Synapse functions.                                              |true   |
 * |Proto      |If not nil, only include functions with this function prototype.                        |nil    |
 * |Environment|If not nil, only include functions with this environment.                               |nil    |
 * @remarks Values are compared using bit-for-bit equality checks. This means that NaN == NaN and -0 ~= 0. This allows you to specify NaN or -0 as a value you want to search for.
 */
declare function filtergc(type: "function", options: functionFilter, return_one: true): Callback | undefined;
/**
 * Searches for values currently referenced by Lua that match the given criteria. Setting return_one indicates that this function should return the first result, or nil if there are no matches.
 * |Key          |Description                                                                                       |Default|
 * |:-----------:|:------------------------------------------------------------------------------------------------:|:-----:|
 * |Keys         |If not empty, only include tables with keys corresponding to all values in this table.            |nil    |
 * |Values       |If not empty, only include tables with values corresponding to all values in this table.          |nil    |
 * |KeyValuePairs|If not empty, only include tables with keys/value pairs corresponding to all values in this table.|nil    |
 * |Metatable    |If not empty, only include tables with the metatable passed.                                      |nil    |
 * @remarks Values are compared using bit-for-bit equality checks. This means that NaN == NaN and -0 ~= 0. This allows you to specify NaN or -0 as a value you want to search for.
 */
declare function filtergc(type: "table", options: tableFilter, return_one?: false): object[];
/**
 * Searches for values currently referenced by Lua that match the given criteria. Setting return_one indicates that this function should return the first result, or nil if there are no matches.
 * |Key          |Description                                                                                       |Default|
 * |:-----------:|:------------------------------------------------------------------------------------------------:|:-----:|
 * |Keys         |If not empty, only include tables with keys corresponding to all values in this table.            |nil    |
 * |Values       |If not empty, only include tables with values corresponding to all values in this table.          |nil    |
 * |KeyValuePairs|If not empty, only include tables with keys/value pairs corresponding to all values in this table.|nil    |
 * |Metatable    |If not empty, only include tables with the metatable passed.                                      |nil    |
 * @remarks Values are compared using bit-for-bit equality checks. This means that NaN == NaN and -0 ~= 0. This allows you to specify NaN or -0 as a value you want to search for.
 */
declare function filtergc(type: "table", options: tableFilter, return_one: true): object | undefined;
/**
 * Returns a list of all instances referenced by Lua. Core script references are not included.
 */
declare function getinstances(): Instance[];
/**
 * Returns a list of all nil-parented instances referenced by Lua. Core script references are not included.
 */
declare function getnilinstances(): Instance[];
/**
 * Returns a list of all loaded scripts in the caller's global state.
 */
declare function getscripts(): LuaSourceContainer[];
/**
 * Returns a list of all loaded ModuleScripts in the caller's global state.
 */
declare function getloadedmodules(): ModuleScript[];
/**
 * Emulates clicking a `ClickDetector`.
 */
declare function fireclickdetector(target: ClickDetector): void;
/**
 * Emulates triggering a `ProximityPrompt`. Equivalent to calling replicatesignal on `ProximityPrompt.TriggerActionReplicated` and `ProximityPrompt.TriggerEndedActionReplicated` (non-scriptable events).
 */
declare function fireproximityprompt(target: ProximityPrompt): void;
/**
 * Emulates a `Touched` event on `to_touch` with `part`.
 */
declare function firetouchinterest(part: Instance, to_touch: Instance, toggle: boolean): void;

declare interface Instance {
	GetDebugId(): string;
}
