// noinspection JSUnusedGlobalSymbols

// borrowed from https://github.com/Belkworks/rbxts-synapse-types/blob/master/types/class/SynSignal.d.ts
interface SynConnection {
	/** Disconnects this connection from its SynSignal. */
	Disconnect(): void;
}
interface SynSignal<T extends unknown[] = []> {
	/** Connects a listener to this signal. Errors if called on a Lua state different to the one used to create this signal. */
	Connect(callback: (...args: T) => void): SynConnection;
	/** Yields the current thread until the next time this signal is fired. Returns any invocation parameters. Errors if called on a Lua state different to the one used to create this signal. */
	Wait(): LuaTuple<T>;
	/** Fires this signal. Only usable when this signal is created via `SynSignal.new()`. Equivalent behavior exists via the `__call` metamethod; i.e. instead of `sig:Fire(1, 2, 3)` you can also do `sig(1, 2, 3)`. */
	Fire(...args: T): void;
}
declare const SynSignal: {
	/** Creates a new SynSignal that can be called with :Fire(). */
	new <T extends unknown[] = []>(): SynSignal<T>;
};
