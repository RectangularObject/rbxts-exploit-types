// noinspection JSUnusedGlobalSymbols

interface DirectoryWatcher {
	/**
	 * The path targeted by this DirectoryWatcher.
	 */
	readonly Path: string;
	/**
	 * Determines whether the DirectoryWatcher watches directories recursively or not. Defaults to true unless explicitly specified otherwise in the constructor.
	 */
	Recursive?: boolean;
	/**
	 * Fires on file contents being changed.
	 * @constructor
	 */
	OnChanged(): SynSignal<[path: string]>;
	/**
	 * Fires on a file being created.
	 * @constructor
	 */
	OnCreated(): SynSignal<[path: string]>;
	/**
	 * Fires on a file being deleted.
	 * @constructor
	 */
	OnDeleted(): SynSignal<[path: string]>;
	/**
	 * Fires on a file being renamed.
	 * @constructor
	 */
	OnRenamed(): SynSignal<[path: string]>;
	/**
	 * This event is called when there are too many directory changes at once, and exists due to a fundamental flaw in the Windows API. An internal workaround is possible but would be relatively memory-intensive, so this is the "fix" used for now. It is called for every currently active DirectoryWatcher. Cases where this happens are relatively rare, but may still exist; e.g. in the case of batch deletions of large folders. Users are recommended to treat this as a change to every relevant file.
	 * @constructor
	 */
	OnOverflow(): SynSignal<[path: string]>;
}
declare const DirectoryWatcher: { new (Path: string, Recursive?: boolean): DirectoryWatcher };
