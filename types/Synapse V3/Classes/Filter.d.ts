// noinspection JSUnusedGlobalSymbols

interface FilterBase {}
interface NotFilter extends FilterBase {
	Target: FilterBase;
}
interface AnyFilter extends FilterBase {
	/** A list of filters. */
	Filters: FilterBase[];
}
interface AllFilter extends FilterBase {
	/** A list of filters. */
	Filters: FilterBase[];
}
interface TypeFilter extends FilterBase {
	ArgumentIndex: number;
	ArgumentType: string;
}
interface NamecallFilter extends FilterBase {
	NamecallMethod: string;
}
interface InstanceTypeFilter extends FilterBase {
	ArgumentIndex: number;
	InstanceType: keyof CreatableInstances;
}
interface UserdataTypeFilter extends FilterBase {
	ArgumentIndex: number;
	/**
	 * @writeonly
	 */
	UserdataType: undefined | userdata; // TODO: implement write-only (Not possible in TS)
}
interface ArgumentFilter extends FilterBase {
	ArgumentIndex: number;
	Argument: unknown;
	StripNull: boolean;
}
interface ArgCountFilter extends FilterBase {
	ArgumentCount: number;
}
interface CallerFilter extends FilterBase {
	Invert: boolean;
}
declare const NotFilter: { new (target: FilterBase): NotFilter };
declare const AnyFilter: { new (filters?: FilterBase[]): AnyFilter };
declare const AllFilter: { new (filters?: FilterBase[]): AllFilter };
declare const TypeFilter: { new (index: number, type: string): TypeFilter };
declare const NamecallFilter: { new (method: string): NamecallFilter };
declare const InstanceTypeFilter: { new (argument_index: number, instance_type: keyof CreatableInstances): InstanceTypeFilter };
declare const UserdataTypeFilter: { new (argument_index: number, userdata_type: userdata): UserdataTypeFilter };
declare const ArgumentFilter: { new (argument_index: number, argument: unknown): ArgumentFilter };
declare const ArgCountFilter: { new (argument_count: number): ArgCountFilter };
declare const CallerFilter: { new (invert: boolean): CallerFilter };
declare type userdata = unknown; // TODO: implement userdata properly, (Roblox TS uses unknown https://github.com/roblox-ts/types/blob/master/include/roblox.d.ts)
declare type Filter = FilterBase;
